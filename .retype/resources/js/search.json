[[{"l":"AbstractDB","p":["AbstractDB is a local-first database abstraction solution for Dart applications with the following features:","Schemaless: Flexible document storage without rigid schemas","Persistence: Multiple storage backends support","Reactive: Real-time data updates","Synchronization: Built-in sync capabilities"]},{"l":"Installation","p":["Add AbstractDB to your pubspec.yaml:"]},{"l":"Quick Start"},{"l":"Features"},{"l":"Local-First","p":["AbstractDB prioritizes local data storage and operations, ensuring your application works offline while providing synchronization capabilities when needed."]},{"l":"Type Safety","p":["Utilize Dart's type system with generic collections:"]},{"l":"Flexible Storage","p":["Choose from multiple storage backends:","In-memory (default)","Hive","Custom storage adapters"]}],[{"l":"Collection API Reference"},{"l":"Constructor"},{"i":"collectioni-e","l":"Collection<I, E>"},{"l":"Properties","p":["Name","Type","Description","String","Collection identifier","indexes","List<IndexProvider>","List of index providers","reactivities","List","List of reactivity adapters"]},{"l":"Methods"},{"l":"save","p":["Saves a document to the collection."]},{"l":"find","p":["Creates a cursor for querying documents."]},{"l":"remove","p":["Removes a document by ID."]}],[{"l":"Working with Collections","p":["Collections are the primary way to store and manage data in AbstractDB."]},{"l":"Creating Collections"},{"l":"Basic Collection"},{"l":"Typed Collection"},{"l":"Querying"},{"l":"Basic Queries"},{"l":"Using Cursors"},{"l":"Persistence","p":["Enable persistent storage using Hive:"]}],[{"l":"Reactivity","p":["AbstractDB supports reactive data updates through various adapters."]},{"l":"Using Signals"},{"l":"Change Events","p":["Collections emit events when data changes:"]}],[{"l":"Synchronization","p":["AbstractDB supports data synchronization through various adapters."]},{"l":"Supabase Integration"},{"l":"Custom Sync Adapters","p":["Implement your own sync adapter by extending SyncAdapter:"]}]]